<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soecode.web.mapper.AccountChangeMapper">
  <resultMap id="BaseResultMap" type="com.soecode.web.entity.AccountChange">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="recharge_money" jdbcType="DOUBLE" property="rechargeMoney" />
    <result column="expense_money" jdbcType="DOUBLE" property="expenseMoney" />
    <result column="given_money" jdbcType="DOUBLE" property="givenMoney" />
    <result column="rest_money" jdbcType="DOUBLE" property="restMoney" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, recharge_money, expense_money, given_money, rest_money, order_id, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_change
    where user_id = #{userId,jdbcType=INTEGER}
    order by create_time desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_change
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.soecode.web.entity.AccountChange">
    insert into account_change (id, user_id, user_name,
      recharge_money, expense_money, given_money, 
      rest_money, order_id, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{rechargeMoney,jdbcType=DOUBLE}, #{expenseMoney,jdbcType=DOUBLE}, #{givenMoney,jdbcType=DOUBLE}, 
      #{restMoney,jdbcType=DOUBLE}, #{orderId,jdbcType=INTEGER}, now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.soecode.web.entity.AccountChange">
    insert into account_change
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="rechargeMoney != null">
        recharge_money,
      </if>
      <if test="expenseMoney != null">
        expense_money,
      </if>
      <if test="givenMoney != null">
        given_money,
      </if>
      <if test="restMoney != null">
        rest_money,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
        create_time,
        update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="rechargeMoney != null">
        #{rechargeMoney,jdbcType=DOUBLE},
      </if>
      <if test="expenseMoney != null">
        #{expenseMoney,jdbcType=DOUBLE},
      </if>
      <if test="givenMoney != null">
        #{givenMoney,jdbcType=DOUBLE},
      </if>
      <if test="restMoney != null">
        #{restMoney,jdbcType=DOUBLE},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>now(), now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.soecode.web.entity.AccountChange">
    update account_change
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="rechargeMoney != null">
        recharge_money = #{rechargeMoney,jdbcType=DOUBLE},
      </if>
      <if test="expenseMoney != null">
        expense_money = #{expenseMoney,jdbcType=DOUBLE},
      </if>
      <if test="givenMoney != null">
        given_money = #{givenMoney,jdbcType=DOUBLE},
      </if>
      <if test="restMoney != null">
        rest_money = #{restMoney,jdbcType=DOUBLE},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
        update_time = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soecode.web.entity.AccountChange">
    update account_change
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      recharge_money = #{rechargeMoney,jdbcType=DOUBLE},
      expense_money = #{expenseMoney,jdbcType=DOUBLE},
      given_money = #{givenMoney,jdbcType=DOUBLE},
      rest_money = #{restMoney,jdbcType=DOUBLE},
      order_id = #{orderId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>